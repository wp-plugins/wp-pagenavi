<?php
/*
Plugin Name: WP-PageNavi
Plugin URI: http://www.lesterchan.net/portfolio/programming.php
Description: Adds a more advanced paging navigation to your WordPress blog.
Version: 2.11
Author: GaMerZ
Author URI: http://www.lesterchan.net
*/


/*  
	Copyright 2007  Lester Chan  (email : gamerz84@hotmail.com)

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
*/


### Create Text Domain For Translations
load_plugin_textdomain('wp-pagenavi', 'wp-content/plugins/pagenavi');


### Function: Page Navigation CSS
add_action('wp_head', 'pagenavi_css');
function pagenavi_css() {
	echo "\n".'<!-- Start Of Script Generated By WP-PageNavi 2.11 -->'."\n";
	echo '<link rel="stylesheet" href="'.get_option('siteurl').'/wp-content/plugins/pagenavi/pagenavi-css.css" type="text/css" media="screen" />'."\n";
	echo '<!-- End Of Script Generated By WP-PageNavi 2.11 -->'."\n";
}


### Function: Page Navigation: Boxed Style Paging
function wp_pagenavi($before = '', $after = '', $prelabel = '', $nxtlabel = '', $pages_to_show = 5, $always_show = false) {
	global $request, $posts_per_page, $wpdb, $paged;
	if(empty($prelabel)) {
		$prelabel  = '&laquo;';
	}
	if(empty($nxtlabel)) {
		$nxtlabel = '&raquo;';
	}
	if (!is_single()) {
		$numposts = 0;
		if(strpos(get_query_var('tag'), " ")) {
		    preg_match('#^(.*)\sLIMIT#siU', $request, $matches);
		    $fromwhere = $matches[1];
		    $results = $wpdb->get_results($fromwhere);
		    $numposts = count($results);
		} else {
			preg_match('#FROM\s*+(.+?)\s+(GROUP BY|ORDER BY)#si', $request, $matches);
			$fromwhere = $matches[1];
			$numposts = $wpdb->get_var("SELECT COUNT(DISTINCT ID) FROM $fromwhere");
		}
		$max_page = ceil($numposts/$posts_per_page);
		if(empty($paged)) {
			$paged = 1;
		}
		$pages_to_show_minus_1 = $pages_to_show-1;
		$half_page_start = floor($pages_to_show_minus_1/2);
		$half_page_end = ceil($pages_to_show_minus_1/2);
		$start_page = $paged - $half_page_start;
		if($start_page <= 0) {
			$start_page = 1;
		}
		$end_page = $paged + $half_page_end;
		if(($end_page - $start_page) != $pages_to_show_minus_1) {
			$end_page = $start_page + $pages_to_show_minus_1;
		}
		if($end_page > $max_page) {
			$start_page = $max_page - $pages_to_show_minus_1;
			$end_page = $max_page;
		}
		if($max_page > 1 || $always_show) {
			echo '<div class="wp-pagenavi">'."\n";
			echo '<span class="pages">'.sprintf(__('Page %s of %s', 'wp-pagenavi'), $paged, $max_page).'</span>';
			if ($paged >= $pages_to_show_minus_1) {
				echo '<a href="'.get_pagenum_link().'">&laquo; First</a>';
				//echo '<span class="extend">...</span>';
			}
			previous_posts_link($prelabel);
			for($i = $start_page; $i  <= $end_page; $i++) {
				if($i == $paged) {
					echo '<span class="current">'.$i.'</span>';
				} else {
					echo '<a href="'.get_pagenum_link($i).'">'.$i.'</a>';
				}
			}
			next_posts_link($nxtlabel, $max_page);
			if ($end_page < $max_page) {
				//echo '<span class="extend">...</span>';
				echo '<a href="'.get_pagenum_link($max_page).'">Last &raquo;</a>';
			}
			echo '</div>'."\n";
		}
	}
}


### Function: Page Navigation: Simple Paging
function wp_pagenavi_simple($before = '', $after = '', $prelabel = '', $nxtlabel = '', $pages_to_show = 5, $always_show = false) {
	global $request, $posts_per_page, $wpdb, $paged;
	if(empty($prelabel)) {
		$prelabel  = '&laquo;';
	}
	if(empty($nxtlabel)) {
		$nxtlabel = '&raquo;';
	}
	$half_pages_to_show = round($pages_to_show/2);
	if (!is_single()) {
		$numposts = 0;
		if(strpos(get_query_var('tag'), " ")) {
		    preg_match('#^(.*)\sLIMIT#siU', $request, $matches);
		    $fromwhere = $matches[1];
		    $results = $wpdb->get_results($fromwhere);
		    $numposts = count($results);
		} else {
			preg_match('#FROM\s*+(.+?)\s+(GROUP BY|ORDER BY)#si', $request, $matches);
			$fromwhere = $matches[1];
			$numposts = $wpdb->get_var("SELECT COUNT(DISTINCT ID) FROM $fromwhere");
		}
		$max_page = ceil($numposts / $posts_per_page);
		if(empty($paged)) {
			$paged = 1;
		}
		if($max_page > 1 || $always_show) {
			echo $before.sprintf(__('Pages (%s): ', 'wp-pagenavi'), $max_page).'<strong>';
			if ($paged >= ($pages_to_show-1)) {
				echo '<a href="'.get_pagenum_link().'">'.__('&laquo; First', 'wp-pagenavi').'</a> '.__('...', 'wp-pagenavi').' ';
			}
			previous_posts_link($prelabel);
			for($i = $paged - $half_pages_to_show; $i  <= $paged + $half_pages_to_show; $i++) {
				if ($i >= 1 && $i <= $max_page) {
					if($i == $paged) {
						echo "[$i]";
					} else {
						echo ' <a href="'.get_pagenum_link($i).'">'.$i.'</a> ';
					}
				}
			}
			next_posts_link($nxtlabel, $max_page);
			if (($paged+$half_pages_to_show) < ($max_page)) {
				echo ' '.__('...', 'wp-pagenavi').' <a href="'.get_pagenum_link($max_page).'">'.__('Last &raquo;', 'wp-pagenavi').'</a>';
			}
			echo "</strong>$after";
		}
	}
}


### Function: Page Navigation: Drop Down Menu
function wp_pagenavi_dropdown() {
	global $request, $posts_per_page, $wpdb, $paged;
	if (!is_single()) {
		$numposts = 0;
		if(strpos(get_query_var('tag'), " ")) {
		    preg_match('#^(.*)\sLIMIT#siU', $request, $matches);
		    $fromwhere = $matches[1];
		    $results = $wpdb->get_results($fromwhere);
		    $numposts = count($results);
		} else {
			preg_match('#FROM\s*+(.+?)\s+(GROUP BY|ORDER BY)#si', $request, $matches);
			$fromwhere = $matches[1];
			$numposts = $wpdb->get_var("SELECT COUNT(DISTINCT ID) FROM $fromwhere");
		}
		$max_page = ceil($numposts / $posts_per_page);
		if(empty($paged)) {
			$paged = 1;
		}
		if($max_page > 1) {
			echo '<form action="'.htmlspecialchars($_SERVER['PHP_SELF']).'" method="get">'."\n";
			echo '<select size="1" onchange="document.location.href = this.options[this.selectedIndex].value;">'."\n";
			for($i = 1; $i  <= $max_page; $i++) {
				$page_num = $i;
				if($page_num == 1) {
					$page_num = 0;
				}
				if($i == $paged) {
					echo '<option value="'.get_pagenum_link($page_num).'" selected="selected">'.sprintf(__('Page: %s', 'wp-pagenavi'), $i)."</option>\n";
				} else {
					echo '<option value="'.get_pagenum_link($page_num).'">'.sprintf(__('Page: %s', 'wp-pagenavi'), $i)."</option>\n";
				}
			}
			echo "</select>\n";
			echo "</form>\n";
		}
	}
}
?>